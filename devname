#! /bin/sh -eu
set -o errexit -o nounset

# Copyright (C) 2006 Marco d'Itri <md@Linux.IT>
# Copyright (C) 2007 Kay Sievers <kay.sievers@vrfy.org>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation version 2 of the License.

# variables used to communicate:
#   INTERFACE_NAME        requested name supplied by external tool

# debug, if UDEV_LOG=<debug>
if [ "${UDEV_LOG-0}" -ge 7 ]; then
	set -x
fi

RULES_FILE='/etc/udev/rules.d/65-devname.rules'

if test ! -e /lib/udev/rule_generator.functions -a \
-e /lib/udev/hotplug.functions; then
	. /lib/udev/hotplug.functions
else
	. /lib/udev/rule_generator.functions
fi

interface_name_taken() {
	local value="$(find_all_rules 'NAME=' $INTERFACE "")"
	if [ "$value" ]; then
		return 0
	else
		return 1
	fi
}

write_rule() {
	local match="$1"
	local name="$2"

	{
	if [ "${PRINT_HEADER-}" ]; then
		PRINT_HEADER=
		echo "# This file was generated by the $0 program."
		echo "# Keep each rule on a single line."
	fi

	echo ""
	echo "ACTION==\"add\", $match, NAME=\"$name\""
	} >> $RULES_FILE
}

DEV="$1"
INTERFACE="$2"
PATH_ID="udevadm test-builtin path_id"
MATCHPATH="$($PATH_ID "$DEV" | sed -n 's/^ID_PATH=//p')"

# Prevent concurrent processes from modifying the file at the same time.
trap "unlock_rules_file" EXIT
lock_rules_file

# Check if the rules file is writeable.
choose_rules_file

match="ENV{ID_PATH}==\"$MATCHPATH\""

	# See if a rule using the current name already exists
	if interface_name_taken; then
		echo "$INTERFACE: Name already assigned" >&2
		exit 1
	fi

write_rule "$match" "$INTERFACE"

exit 0
